## @file
#  Report Status Code Handler PEIM which produces general handlers and hook them onto the PEI status code router.
#
#  Copyright (c) 2009 - 2014, Intel Corporation. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution. The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = StatusCodeHandlerPei
  FILE_GUID                  = 9D225237-FA01-464C-A949-BAABC02D31D0
  MODULE_TYPE                = PEIM
  VERSION_STRING             = 1.0
  ENTRY_POINT                = StatusCodeHandlerPeiEntry
  MODULE_UNI_FILE            = StatusCodeHandlerPei.uni

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec
  Nt32Pkg/Nt32Pkg.dec

[Binaries.X64]
  PE32|StatusCodeHandlerPei.efi
  DISPOSABLE|StatusCodeHandlerPei.pdb

[PatchPcd.X64]

[Protocols.X64]

[Ppis.X64]
  ## CONSUMES
  gEfiPeiRscHandlerPpiGuid

  # PPI ALWAYS_CONSUMED
  gPeiNtThunkPpiGuid

  ## SOMETIMES_CONSUMES
  gPcdPpiGuid

  ## CONSUMES
  gEfiPeiPcdPpiGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## SOMETIMES_PRODUCES
  gEfiPeiFirmwareVolumeInfo2PpiGuid


[Guids.X64]
  ## SOMETIMES_PRODUCES   ## HOB
  ## SOMETIMES_CONSUMES   ## HOB
  gMemoryStatusCodeRecordGuid

  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeDataTypeStringGuid

  ## SOMETIMES_CONSUMES ## GUID
  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeDataTypeDebugGuid

  ## SOMETIMES_CONSUMES   ## UNDEFINED
  gEfiStatusCodeSpecificDataGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation StackHob
  gEfiHobMemoryAllocStackGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation BspStoreHob
  gEfiHobMemoryAllocBspStoreGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation ModuleHob
  gEfiHobMemoryAllocModuleGuid

  ## SOMETIMES_PRODUCES ## GUID # FV File System Guid.
  gEfiFirmwareFileSystem2Guid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/PeiMemoryAllocationLib/PeiMemoryAllocationLib.inf
#  Nt32Pkg/Library/PeiNt32OemHookStatusCodeLib/PeiNt32OemHookStatusCodeLib.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseMemoryLibOptPei/BaseMemoryLibOptPei.inf
#  MdeModulePkg/Library/PeiDxeDebugLibReportStatusCode/PeiDxeDebugLibReportStatusCode.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdeModulePkg/Library/PeiReportStatusCodeLib/PeiReportStatusCodeLib.inf
#  MdePkg/Library/PeiHobLib/PeiHobLib.inf
#  MdePkg/Library/PeiPcdLib/PeiPcdLib.inf
#  MdePkg/Library/PeiServicesLib/PeiServicesLib.inf
#  MdePkg/Library/PeiServicesTablePointerLib/PeiServicesTablePointerLib.inf
#  MdePkg/Library/PeimEntryPoint/PeimEntryPoint.inf
#  MdePkg/Library/BaseSerialPortLibNull/BaseSerialPortLibNull.inf

[Depex.X64]
#  (gEfiPeiRscHandlerPpiGuid) AND (gEfiPeiPcdPpiGuid)

[UserExtensions.TianoCore."ExtraFiles"]
StatusCodeHandlerPeiExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC (EBC is only for build)
#

[BuildOptions.X64]
## @AsBuilt
##   MSFT:DEBUG_VS2017_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   MSFT:DEBUG_VS2017_X64_ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
##   MSFT:DEBUG_VS2017_X64_VFR_FLAGS = -l -n
##   MSFT:DEBUG_VS2017_X64_PP_FLAGS = /nologo /E /TC /FIAutoGen.h
##   MSFT:DEBUG_VS2017_X64_GENFW_FLAGS = 
##   MSFT:DEBUG_VS2017_X64_OPTROM_FLAGS = -e
##   MSFT:DEBUG_VS2017_X64_SLINK_FLAGS = /NOLOGO /LTCG
##   MSFT:DEBUG_VS2017_X64_DTC_FLAGS = -H epapr
##   MSFT:DEBUG_VS2017_X64_ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd /Zi
##   MSFT:DEBUG_VS2017_X64_ASL_FLAGS = 
##   MSFT:DEBUG_VS2017_X64_CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
##   MSFT:DEBUG_VS2017_X64_NASMB_FLAGS = -f bin
##   MSFT:DEBUG_VS2017_X64_VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
##   MSFT:DEBUG_VS2017_X64_ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
##   MSFT:DEBUG_VS2017_X64_MAKE_FLAGS = /nologo
##   MSFT:DEBUG_VS2017_X64_DLINK2_FLAGS = /WHOLEARCHIVE
##   MSFT:DEBUG_VS2017_X64_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /EXPORT:InitializeDriver=$(IMAGE_ENTRY_POINT) /BASE:0x10000 /ALIGN:4096 /FILEALIGN:4096 /SUBSYSTEM:CONSOLE
##   MSFT:DEBUG_VS2017_X64_ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
##   MSFT:DEBUG_VS2017_X64_OBJCOPY_FLAGS = objcopy not needed for
##   MSFT:DEBUG_VS2017_X64_APP_FLAGS = /nologo /E /TC
##   MSFT:DEBUG_VS2017_X64_ASMLINK_FLAGS = /nologo /tiny
##   MSFT:DEBUG_VS2017_X64_NASM_FLAGS = -Ox -f win64 -g
